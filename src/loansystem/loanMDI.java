/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package loansystem;

import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.ObjectInput;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.List;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JOptionPane;

/**
 *
 * @author Kannawat
 */
public class loanMDI extends javax.swing.JFrame {
    fmLogin fm = null;
    LoanData fm2 = null;
    UserLogin user = new UserLogin();
    /**
     * Creates new form loanMDI
     */
    public loanMDI() {
        initComponents();
        fmLoginDisplay();
        menuBar.setVisible(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        desktopPane = new javax.swing.JDesktopPane();
        menuBar = new javax.swing.JMenuBar();
        fileMenu = new javax.swing.JMenu();
        saveItem = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        readItem = new javax.swing.JMenuItem();
        exitMenuItem = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        fileMenu.setMnemonic('f');
        fileMenu.setText("Menu");
        fileMenu.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                fileMenuMouseClicked(evt);
            }
        });

        saveItem.setMnemonic('s');
        saveItem.setText("Save");
        saveItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                saveItemMouseClicked(evt);
            }
        });
        saveItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveItemActionPerformed(evt);
            }
        });
        fileMenu.add(saveItem);

        jMenuItem1.setText("Save as");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        fileMenu.add(jMenuItem1);

        readItem.setText("Open");
        readItem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                readItemMouseClicked(evt);
            }
        });
        readItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                readItemActionPerformed(evt);
            }
        });
        fileMenu.add(readItem);

        exitMenuItem.setMnemonic('x');
        exitMenuItem.setText("Exit");
        exitMenuItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                exitMenuItemActionPerformed(evt);
            }
        });
        fileMenu.add(exitMenuItem);

        menuBar.add(fileMenu);

        setJMenuBar(menuBar);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(desktopPane, javax.swing.GroupLayout.DEFAULT_SIZE, 279, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void exitMenuItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_exitMenuItemActionPerformed
        System.exit(0);
    }//GEN-LAST:event_exitMenuItemActionPerformed

    private void saveItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveItemActionPerformed
     
    }//GEN-LAST:event_saveItemActionPerformed

    private void saveItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_saveItemMouseClicked
        try {
            writeObjecttoFile(fm2.InstallmentList);
            System.out.println("Write");
        } catch(Exception ex) {
            System.out.println("Failed to write");
        }
    }//GEN-LAST:event_saveItemMouseClicked

    private boolean writeObjecttoFile(List<CalLoan> pListData){
        
      System.out.println("Start: Write");
        
       String fileP = "D:\\UserData.bin";
       
       try{
          FileOutputStream file = new FileOutputStream(fileP);
          ObjectOutputStream writer = new ObjectOutputStream(file);

          writer.writeObject(pListData);

          writer.close();
          file.close();
          
          System.out.println("End Write: Success");
          
          return true;
       }
       catch(Exception ex){
           System.err.println("failed to write" + fileP + ", "+ex);
           
           System.out.println("End Write: Failed");
           
           return false;
       }
    }
    
    private void fileMenuMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_fileMenuMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_fileMenuMouseClicked

    private void readItemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_readItemMouseClicked
        fm2.InstallmentList = readDataFromFile();
    }//GEN-LAST:event_readItemMouseClicked

    List<CalLoan> readDataFromFile() {
        String filePath = "D:\\StudentData.bin";
        try {
            FileInputStream file = new FileInputStream(filePath);
            ObjectInput reader = new ObjectInputStream(file);
            while(true) {
                try {
                    List<CalLoan> obj = (List<CalLoan>) reader.readObject();
                    return obj;
                } catch(Exception ex) {
                    System.err.println("end of reader file ");
                    break;
                }
            }
        } catch(Exception ex) {
            JOptionPane.showMessageDialog(null,
                "Failed to read.");
            System.err.println("failed to read " + filePath + ", " + ex);
        }
        return null;
    }
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        // parent component of the dialog
JFrame parentFrame = new JFrame();
 
JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle("Specify a file to save");   
 
int userSelection = fileChooser.showSaveDialog(parentFrame);
 
if (userSelection == JFileChooser.APPROVE_OPTION) {
    File fileToSave = fileChooser.getSelectedFile();

    System.out.println("Save as file: " + fileToSave.getAbsolutePath());
}

    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void readItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_readItemActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_readItemActionPerformed
    
    private void fmLoginDisplay() {
        if(fm == null) {
            fm = new fmLogin(new LoginListener(){
                @Override
                public void LoginValue(String pName,String pPass){
                    if(pName.equals(user.getName()) && 
                        pPass.equals(user.getPassword()))
                    {
                        fm.dispose();
                        fm2 = new LoanData();
                        desktopPane.add(fm2);
                        fm2.setVisible(true);
                        fm2.pack();
                        menuBar.setVisible(true);
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Check Username and Password");
                    }
                }
            });
            desktopPane.add(fm);
            fm.pack();
        }
        fm.setVisible(true); 
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(loanMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(loanMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(loanMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(loanMDI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new loanMDI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JDesktopPane desktopPane;
    private javax.swing.JMenuItem exitMenuItem;
    private javax.swing.JMenu fileMenu;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuBar menuBar;
    private javax.swing.JMenuItem readItem;
    private javax.swing.JMenuItem saveItem;
    // End of variables declaration//GEN-END:variables

}
